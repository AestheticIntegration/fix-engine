import FIX_4_4

outbound message ExecutionReport {
    req ClOrdID
    req OrderID
    req ExecID
    req ExecType
    req AvgPx
    req Side
    req LeavesQty
    req CumQty
    req OrdStatus
    req Instrument.Symbol
    opt Text
}

message NewOrderSingle {
    req ClOrdID unique      
    req Side
    req TransactTime
    req OrdType
    req Instrument.Symbol
} 

action x {
    x : int
}

receive( msg: NewOrderSingle) {
    send ExecutionReport with {
        ClOrdID = msg.ClOrdID;
        OrderID = msg.ClOrdID;
        ExecID = "Test";
        ExecType = ExecType.Calculated;
        AvgPx = 0.0;
        Side = msg.Side;
        LeavesQty = 0.0;
        CumQty = 0.0;
        OrdStatus = OrdStatus.New;
        Instrument.Symbol = msg.Instrument.Symbol;
    }
}

reject (msg:NewOrderSingle,rejReason:string)
{
    missingfield:{
        send ExecutionReport with {
            ClOrdID = "None";
            OrderID = "None";
            ExecID = "Test";
            ExecType = ExecType.Calculated;
            AvgPx = 0.0;
            Side = Side.Buy;
            LeavesQty = 0.0;
            CumQty = 0.0;
            OrdStatus = OrdStatus.New;
            Instrument.Symbol = "None";
            Text = Some rejReason;
        }
    }
    invalidfield:{
        send ExecutionReport with {
            ClOrdID = msg.ClOrdID;
            OrderID = msg.ClOrdID;
            ExecID = "Test";
            ExecType = ExecType.Calculated;
            AvgPx = 0.0;
            Side = Side.Buy;
            LeavesQty = 0.0;
            CumQty = 0.0;
            OrdStatus = OrdStatus.New;
            Instrument.Symbol = msg.Instrument.Symbol;
            Text = Some rejReason;
        }
    }
    invalid:{
        send ExecutionReport with {
            ClOrdID = msg.ClOrdID;
            OrderID = msg.ClOrdID;
            ExecID = "Test";
            ExecType = ExecType.Calculated;
            AvgPx = 0.0;
            Side = Side.Buy;
            LeavesQty = 0.0;
            CumQty = 0.0;
            OrdStatus = OrdStatus.New;
            Instrument.Symbol = "None";
            Text = Some rejReason;
        }
    }
}
