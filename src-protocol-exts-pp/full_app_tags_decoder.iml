(* Imandra Inc. copyright 2021 *)
[@@@program]
[@@@require "decoders-yojson"]
open Decoders_yojson.Basic.Decode;;
[@@@require "decoders-yojson"]
open Decoders_yojson.Basic.Decode.Infix;;
[@@@import "../src-protocol-exts/full_app_tags.iml"]
open Full_app_tags;;


let full_app_string_to_msg_tag (tag)  =
    (match tag with
        | _ -> None
    )
;;

let full_app_string_to_field_tag (tag)  =
    (match tag with
        | _ -> None
    )
;;

let full_app_msg_tag_of_json  : full_app_msg_tag decoder =
    string >>= (fun x -> (match full_app_string_to_msg_tag x with
        | None -> (fail ("Unknown Tag: "^x))
        | Some x -> (succeed x)
    )
    )
;;

let full_app_msg_tag_opt_of_json  : full_app_msg_tag option decoder =
    (maybe string) >>= (fun x -> (match x with
        | None -> (succeed None)
        | Some x -> (succeed (full_app_string_to_msg_tag x))
    )
    )
;;

let full_app_field_tag_of_json  : full_app_field_tag decoder =
    string >>= (fun x -> (match full_app_string_to_field_tag x with
        | None -> (fail ("Unknown Tag: "^x))
        | Some x -> (succeed x)
    )
    )
;;

let full_app_field_tag_opt_of_json  : full_app_field_tag option decoder =
    (maybe string) >>= (fun x -> (match x with
        | None -> (succeed None)
        | Some x -> (succeed (full_app_string_to_field_tag x))
    )
    )
;;

[@@@logic]
