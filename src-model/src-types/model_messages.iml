(* Imandra Inc. copyright 2021 *)
[@@@import "model_repeating_groups.iml"]
open Model_repeating_groups;;
[@@@import "model_tags.iml"]
open Model_tags;;
[@@@import "../../src-core/numeric.iml"]
open Numeric;;


type mod_newordersingle_defopt_data = {
(** Required for limit OrdTypes. For F/X orders, should be the "all-in" rate (spot rate adjusted for forward points). Can be used to specify a limit price for a pegged order, previously indicated, etc.*)
    mod_def_opt_f_NewOrderSingle_Price : fix_float_6
}
;;

type mod_newordersingle_data = {
(** Required for limit OrdTypes. For F/X orders, should be the "all-in" rate (spot rate adjusted for forward points). Can be used to specify a limit price for a pegged order, previously indicated, etc.*)
    mod_f_NewOrderSingle_Price : fix_float_6
}
;;

type model_msg = 
    | FIX_Msg_NewOrderSingle of mod_newordersingle_data
;;

type model_msg_opt_def = 
    | FIX_Msg_Def_Opt_NewOrderSingle of mod_newordersingle_defopt_data
;;

let is_msg_opt_def_inbound (msg : model_msg_opt_def)  =
    (match msg with
        | FIX_Msg_Def_Opt_NewOrderSingle _ -> true
    )
    [@@macro]
;;

let is_msg_inbound (msg : model_msg)  =
    (match msg with
        | FIX_Msg_NewOrderSingle _ -> true
    )
    [@@macro]
;;

type field_missing_or_invalid_data = {
    field_missing_or_invalid_data_field : m_field_tag;
    field_missing_of_invalid_data_msg : m_msg_tag;
    repeating_group_origin : repeating_group_defs option
}
;;

type model_top_level_msg = 
    | FIX_TL_Normal of model_msg_opt_def
    | FIX_TL_Req_Field_Missing of field_missing_or_invalid_data
    | FIX_TL_Req_Field_Invalid of field_missing_or_invalid_data
    | FIX_TL_PossibleResend of model_msg_opt_def
    | FIX_TL_None 
;;

