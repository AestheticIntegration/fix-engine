(** Tests for caching logic. *)
(***

    Imandra Inc.
    Copyright (c) 2014 - 2019

    test_cache.ml
    
*)
[@@@import "../src-protocol/full_admin_messages.iml"]
[@@@import "../src-protocol/full_messages.iml"]
[@@@import "../src/fix_engine_transitions.iml"] 
[@@@import "../src/fix_engine_utils.iml"] 
[@@@import "../src-core-time-defaults/time_defaults.iml"]
[@@@import "../src-protocol-pp/full_messages_json.iml"]
[@@@program]
open Full_admin_messages
open Full_messages
open Fix_engine_transitions
open Fix_engine_utils
open Time_defaults

let pe = print_endline;;

let make_fix_msg i =
    let msg = Full_FIX_Admin_Msg ( 
        Full_Msg_Heartbeat { hb_test_req_id = Some "123" }
    ) in
    create_outbound_fix_msg (i - 1, 
        "IMANDRA",     
        "TARGET", 
        make_utctimestamp 2017 1 1 0 1 0 None,
        msg, false
    )
;; 

let cache = [
    make_fix_msg (1);
    make_fix_msg (10);
    make_fix_msg (15);
];;

(** Can we transition correctly? *)
let check_cache (c, idx) = 
    if is_cache_complete (c, idx) then
        print_endline "\nCache complete"
    else
        print_endline "\nCache incomplete"
;;

let new_cache_fix_msg = make_fix_msg (12)
;;

let test_cache_index = 0
;;

let cache1 = [
    make_fix_msg (1);
    make_fix_msg (2);
    make_fix_msg (3);
    make_fix_msg (4);
]
;;

let cache2 = [
    make_fix_msg (1);
    make_fix_msg (2);
    make_fix_msg (3);
    make_fix_msg (4);
    make_fix_msg (10);
]
;;

let cache3 = [
    make_fix_msg (2);
    make_fix_msg (3);
    make_fix_msg (4);
    make_fix_msg (5);
]
;;

[@@@logic]
