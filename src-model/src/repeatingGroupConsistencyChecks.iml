(* Aesthetic Integration copyright 2019 *)
open Model_repeating_groups;;

let checkRGConsistency_PartySubIDsGrp (x : model_fix_rec_partysubidsgrp)  : bool =
    let num = (match x.mod_f_PartySubIDsGrp_NoPartySubIDs with
        | None -> 0
        | Some k -> k
    )
     in
    (=) num (let y = 0 in
    let y = (+) ((match x.rg_PartySubIDsGrp_element_4 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_PartySubIDsGrp_element_3 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_PartySubIDsGrp_element_2 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_PartySubIDsGrp_element_1 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_PartySubIDsGrp_element_0 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    y
    )
;;

let checkRGConsistency_MKTXCostAnalysisGrp (x : model_fix_rec_mktxcostanalysisgrp)  : bool =
    let num = (match x.mod_f_MKTXCostAnalysisGrp_NoMKTXCostAnalysis with
        | None -> 0
        | Some k -> k
    )
     in
    (=) num (let y = 0 in
    let y = (+) ((match x.rg_MKTXCostAnalysisGrp_element_4 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_MKTXCostAnalysisGrp_element_3 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_MKTXCostAnalysisGrp_element_2 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_MKTXCostAnalysisGrp_element_1 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_MKTXCostAnalysisGrp_element_0 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    y
    )
;;

let checkRGConsistency_TrdRegPublicationsGrp (x : model_fix_rec_trdregpublicationsgrp)  : bool =
    let num = (match x.mod_f_TrdRegPublicationsGrp_NoTrdRegPublications with
        | None -> 0
        | Some k -> k
    )
     in
    (=) num (let y = 0 in
    let y = (+) ((match x.rg_TrdRegPublicationsGrp_element_4 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_TrdRegPublicationsGrp_element_3 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_TrdRegPublicationsGrp_element_2 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_TrdRegPublicationsGrp_element_1 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_TrdRegPublicationsGrp_element_0 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    y
    )
;;

let checkRGConsistency_AllocsGrp (x : model_fix_rec_allocsgrp)  : bool =
    let num = (match x.mod_f_AllocsGrp_NoAllocs with
        | None -> 0
        | Some k -> k
    )
     in
    (=) num (let y = 0 in
    let y = (+) ((match x.rg_AllocsGrp_element_4 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_AllocsGrp_element_3 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_AllocsGrp_element_2 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_AllocsGrp_element_1 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_AllocsGrp_element_0 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    y
    )
;;

let checkRGConsistency_DealersGrp (x : model_fix_rec_dealersgrp)  : bool =
    let num = (match x.mod_f_DealersGrp_NoDealers with
        | None -> 0
        | Some k -> k
    )
     in
    (=) num (let y = 0 in
    let y = (+) ((match x.rg_DealersGrp_element_4 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_DealersGrp_element_3 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_DealersGrp_element_2 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_DealersGrp_element_1 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_DealersGrp_element_0 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    y
    )
;;

let checkRGConsistency_SecurityAltIDGrp (x : model_fix_rec_securityaltidgrp)  : bool =
    let num = (match x.mod_f_SecurityAltIDGrp_NoSecurityAltID with
        | None -> 0
        | Some k -> k
    )
     in
    (=) num (let y = 0 in
    let y = (+) ((match x.rg_SecurityAltIDGrp_element_4 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_SecurityAltIDGrp_element_3 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_SecurityAltIDGrp_element_2 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_SecurityAltIDGrp_element_1 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_SecurityAltIDGrp_element_0 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    y
    )
;;

let checkRGConsistency_RegulatoryTradeIDsGrp (x : model_fix_rec_regulatorytradeidsgrp)  : bool =
    let num = (match x.mod_f_RegulatoryTradeIDsGrp_NoRegulatoryTradeIDs with
        | None -> 0
        | Some k -> k
    )
     in
    (=) num (let y = 0 in
    let y = (+) ((match x.rg_RegulatoryTradeIDsGrp_element_4 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_RegulatoryTradeIDsGrp_element_3 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_RegulatoryTradeIDsGrp_element_2 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_RegulatoryTradeIDsGrp_element_1 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_RegulatoryTradeIDsGrp_element_0 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    y
    )
;;

let checkRGConsistency_LegsGrp (x : model_fix_rec_legsgrp)  : bool =
    let num = (match x.mod_f_LegsGrp_NoLegs with
        | None -> 0
        | Some k -> k
    )
     in
    (=) num (let y = 0 in
    let y = (+) ((match x.rg_LegsGrp_element_4 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_LegsGrp_element_3 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_LegsGrp_element_2 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_LegsGrp_element_1 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_LegsGrp_element_0 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    y
    )
;;

let checkRGConsistency_ExecsGrp (x : model_fix_rec_execsgrp)  : bool =
    let num = (match x.mod_f_ExecsGrp_NoExecs with
        | None -> 0
        | Some k -> k
    )
     in
    (=) num (let y = 0 in
    let y = (+) ((match x.rg_ExecsGrp_element_4 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_ExecsGrp_element_3 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_ExecsGrp_element_2 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_ExecsGrp_element_1 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_ExecsGrp_element_0 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    y
    )
;;

let checkRGConsistency_LegAllocsGrp (x : model_fix_rec_legallocsgrp)  : bool =
    let num = (match x.mod_f_LegAllocsGrp_NoLegAllocs with
        | None -> 0
        | Some k -> k
    )
     in
    (=) num (let y = 0 in
    let y = (+) ((match x.rg_LegAllocsGrp_element_4 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_LegAllocsGrp_element_3 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_LegAllocsGrp_element_2 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_LegAllocsGrp_element_1 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_LegAllocsGrp_element_0 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    y
    )
;;

let checkRGConsistency_PartyIDsGrp (x : model_fix_rec_partyidsgrp)  : bool =
    let num = (match x.mod_f_PartyIDsGrp_NoPartyIDs with
        | None -> 0
        | Some k -> k
    )
     in
    (=) num (let y = 0 in
    let y = (+) ((match x.rg_PartyIDsGrp_element_4 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_PartyIDsGrp_element_3 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_PartyIDsGrp_element_2 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_PartyIDsGrp_element_1 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_PartyIDsGrp_element_0 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    y
    )
;;

let checkRGConsistency_OrdersGrp (x : model_fix_rec_ordersgrp)  : bool =
    let num = (match x.mod_f_OrdersGrp_NoOrders with
        | None -> 0
        | Some k -> k
    )
     in
    (=) num (let y = 0 in
    let y = (+) ((match x.rg_OrdersGrp_element_4 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_OrdersGrp_element_3 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_OrdersGrp_element_2 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_OrdersGrp_element_1 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    let y = (+) ((match x.rg_OrdersGrp_element_0 with
        | None -> 0
        | Some _ -> 1
    )
    ) y in
    y
    )
;;
