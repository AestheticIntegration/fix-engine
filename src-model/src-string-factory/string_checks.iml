(* Aesthetic Integration copyright 2019 *)
open Actions;;
open Model_messages;;

let isAction (str : string)  =
    (match str with
        | "Actions.FIX_Action_Move" -> true
        | "Actions.FIX_Action_SetState" -> true
        | _ -> false
    )
;;

let isActionData (str : string)  =
    (match str with
        | "Actions.m_action_fix_move" -> true
        | "Actions.m_action_fix_setstate" -> true
        | _ -> false
    )
;;

let isActionField (str : string)  =
    (match str with
        | "Actions.mod_f_Move_pos_x" -> true
        | "Actions.mod_f_Move_pos_y" -> true
        | "Actions.mod_f_SetState_pos_x" -> true
        | "Actions.mod_f_SetState_pos_y" -> true
        | "Actions.mod_f_SetState_nmap" -> true
        | "Actions.mod_f_SetState_nfuel" -> true
        | _ -> false
    )
;;

let isModelFieldTag (str : string)  =
    (match str with
        | _ -> false
    )
;;

let isModelMessageTag (str : string)  =
    (match str with
        | _ -> false
    )
;;

let isMessageField (str : string)  =
    (match str with
        | _ -> false
    )
;;

let isMessage (str : string)  =
    (match str with
        | _ -> false
    )
;;

let isMessageData (str : string)  =
    (match str with
        | _ -> false
    )
;;

let isInternal (str : string)  =
    (match str with
        | "State.f_internal_state" -> true
        | _ -> false
    )
;;

let isInternalField (str : string)  =
    (match str with
        | "State.f_internal_state_status" -> true
        | "State.f_internal_state_fuel" -> true
        | "State.mod_f_internal_state_position_y" -> true
        | "State.mod_f_internal_state_position_x" -> true
        | "State.f_internal_state_islands" -> true
        | _ -> false
    )
;;

let isAssignableField (str : string)  =
    (match str with
        | _ -> false
    )
;;

let isEnum (str : string)  =
    (match str with
        | "Model_app_enums.model_fix_status" -> true
        | _ -> false
    )
;;

let isEnumCase (str : string)  =
    (match str with
        | "Model_app_enums.MOD_FIX_Status_flying" -> true
        | "Model_app_enums.MOD_FIX_Status_crashed" -> true
        | "Model_app_enums.MOD_FIX_Status_reached" -> true
        | _ -> false
    )
;;

let isRepeatingGroup (str : string)  =
    (match str with
        | _ -> false
    )
;;

let name_of_action (x)  =
    (match x with
        | FIX_Action_Move _ -> "Action:Move"
        | FIX_Action_SetState _ -> "Action:SetState"
    )
;;

let name_of_model_msg (x)  =
    ""
;;

let name_of_msg (x)  =
    (match x with
        | FIX_TL_None -> "Msg:None"
    )
;;
