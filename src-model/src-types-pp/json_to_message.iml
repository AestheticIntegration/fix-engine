(* Imandra Inc. copyright 2021 *)
[@@@program]
[@@@import "../../src-core-pp/base_types_json.iml"]
open Base_types_json;;
[@@@import "../../src-core-pp/datetime_json.iml"]
open Datetime_json;;
[@@@require "decoders-yojson"]
open Decoders_yojson.Basic.Decode;;
[@@@require "decoders-yojson"]
open Decoders_yojson.Basic.Decode.Infix;;
[@@@import "json_to_model_tag.iml"]
open Json_to_model_tag;;
[@@@import "../src-types/model_messages.iml"]
open Model_messages;;


let mod_message_newordersingle_decoder  : mod_newordersingle_data decoder =
    (field "Price" float_6_decoder) >>= (fun mod_f_NewOrderSingle_Price -> 
    succeed {
        mod_f_NewOrderSingle_Price = mod_f_NewOrderSingle_Price
    }
    )
;;

let mod_message_newordersingle_opt_def_decoder  : mod_newordersingle_defopt_data decoder =
    (field "Price" float_6_decoder) >>= (fun mod_def_opt_f_NewOrderSingle_Price -> 
    succeed {
        mod_def_opt_f_NewOrderSingle_Price = mod_def_opt_f_NewOrderSingle_Price
    }
    )
;;

let model_message_decoder  : model_msg decoder =
    (field "tag" string) >>= (fun x -> 
    (match x with
        | "D" -> ((field "data" mod_message_newordersingle_decoder) >>= (fun y -> 
        succeed (FIX_Msg_NewOrderSingle y)
        ))
        | d -> (fail ("Unknown Message ("^d^") in JSON decoding."))
    )
    )
;;

let model_message_decoder_opt_def  : model_msg_opt_def decoder =
    (field "tag" string) >>= (fun x -> 
    (match x with
        | "D" -> ((field "data" mod_message_newordersingle_opt_def_decoder) >>= (fun y -> 
        succeed (FIX_Msg_Def_Opt_NewOrderSingle y)
        ))
        | d -> (fail ("Unknown Message ("^d^") in JSON decoding."))
    )
    )
;;

let top_level_message_decoder  : model_top_level_msg decoder =
    (field "top_level_msg" string) >>= (fun f -> 
    (match f with
        | "FIX_TL_Normal" -> ((field "data" model_message_decoder_opt_def) >>= (fun x -> 
        succeed (FIX_TL_Normal x)
        ))
        | "FIX_TL_Req_Field_Missing" -> ((field "data" field_missing_data_decoder) >>= (fun x -> 
        succeed (FIX_TL_Req_Field_Missing x)
        ))
        | "FIX_TL_Req_Field_Invalid" -> ((field "data" field_missing_data_decoder) >>= (fun x -> 
        succeed (FIX_TL_Req_Field_Invalid x)
        ))
        | "FIX_TL_PossibleResend" -> ((field "data" model_message_decoder_opt_def) >>= (fun x -> 
        succeed (FIX_TL_PossibleResend x)
        ))
        | _ -> (succeed FIX_TL_None)
    )
    )
;;

[@@@logic]
