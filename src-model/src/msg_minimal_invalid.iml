(* Imandra Inc. copyright 2021 *)
[@@@import "../src-types/model_messages.iml"]
open Model_messages;;
[@@@import "msg_check_fields.iml"]
open Msg_check_fields;;
[@@@import "msg_check_types.iml"]
open Msg_check_types;;
[@@@import "../src-types/state.iml"]
open State;;


let check_fields_minimal_invalid_NewOrderSingle_0 (msg_data : mod_newordersingle_data) (m_state : model_state)  : bool =
    let mod_f_NewOrderSingle_Price_result = check_field_mod_f_NewOrderSingle_Price msg_data m_state
    in
    mod_f_NewOrderSingle_Price_result.field_invalid_defrej
;;

let check_fields_minimal_invalid_NewOrderSingle (msg_data : mod_newordersingle_data) (m_state : model_state)  : bool =
    let mod_f_NewOrderSingle_Price_result = check_field_mod_f_NewOrderSingle_Price msg_data m_state
    in
    ((&&) (check_fields_minimal_invalid_NewOrderSingle_0 msg_data m_state) mod_f_NewOrderSingle_Price_result.field_invalid_defrej)
;;

let check_validate_minimal_invalid_NewOrderSingle (msg_data : mod_newordersingle_data) (m_state : model_state)  : bool =
    false
;;

let msg_NewOrderSingle_minimal_invalid (msg_data : mod_newordersingle_data) (m_state : model_state)  : bool =
    let fields_invalid = check_fields_minimal_invalid_NewOrderSingle msg_data m_state
    in
    let validates_invalid = check_validate_minimal_invalid_NewOrderSingle msg_data m_state
    in
    (||) ((&&) fields_invalid (not validates_invalid)) ((&&) validates_invalid (not fields_invalid))
;;

let is_message_minimal_invalid (msg : model_msg) (m_state : model_state)  : bool =
    (match msg with
        | FIX_Msg_NewOrderSingle d -> (msg_NewOrderSingle_minimal_invalid d m_state)
    )
    [@@macro]
;;

